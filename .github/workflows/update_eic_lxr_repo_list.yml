name: Workflow to update the list of files in eic lxr

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  pull_request:

jobs:
  check-active-repos:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up dependencies (curl and jq)
      - name: Set up curl and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # Step 3: Run the shell script to check active repositories
      - name: Check Active Repositories
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          ORG_NAME: "eic"
        run: |
          # Variables
          API_URL="https://api.github.com/orgs/$ORG_NAME/repos"
          CUTOFF_DATE=$(date -d "6 months ago" --utc +"%Y-%m-%dT%H:%M:%SZ")
          
          # Get list of repositories (with pagination)
          page=1
          active_repos=()

          while true; do
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$API_URL?page=$page&per_page=100")

            # Check if the response is not an array
            if ! echo "$response" | jq -e 'type != "array"' > /dev/null; then
              # Check if the response contains an error message field
              if echo "$response" | jq -e 'has("message")' > /dev/null; then
                error_message=$(echo "$response" | jq -r '.message')
                echo "Error: $error_message"
                break
              fi
            fi
            
            # Check if there are no more repositories
            if [[ "$(echo "$response" | jq length)" -eq 0 ]]; then
              break
            fi

            # Loop through each repository to check the last commit date
            echo "$response" | jq -r '.[].name' | while read repo_name; do
              commits_url="https://api.github.com/repos/$ORG_NAME/$repo_name/commits?per_page=1"
              commit_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$commits_url")

              # Check if the response is not an array
              if ! echo "$commit_response" | jq -e 'type != "array"' > /dev/null; then
                # Check if the response contains an error message field
                if echo "$commit_response" | jq -e 'has("message")' > /dev/null; then
                  error_message=$(echo "$response" | jq -r '.message')
                  echo "Error: $error_message"
                  continue
                fi
              fi

              echo $commit_response | jq .
              
              # Check if the commit response is an array and has at least one commit
              last_commit_date=$(echo "$commit_response" | jq -r '.[0].commit.committer.date')
              if [[ "$last_commit_date" > "$CUTOFF_DATE" ]]; then
                active_repos+=("$repo_name")
              fi
              
                        
            done

            page=$((page + 1))
          done

          # Output the results
          if [ ${#active_repos[@]} -gt 0 ]; then
            echo "Repositories with commits in the last 6 months:"
            for repo in "${active_repos[@]}"; do
              echo "$repo"
            done
          else
            echo "No active repositories found."
          fi
